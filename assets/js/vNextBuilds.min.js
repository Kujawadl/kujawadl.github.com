"use strict";function BuildsViewModel(e){var a=this;a.projects=ko.observableArray([]),a.detailBuild=ko.observable(null),a.lastUpdate=ko.observable(moment(Date.now()).format("MMMM D YYYY, hh:mm:ss a")),a.isLoading=ko.observable(!1),a.numBuilds=ko.computed(function(){return a.projects().reduce(function(e,a){return e+=a.numBuilds()},0)}),a.numFailing=ko.computed(function(){return a.isLoading()?0:a.projects().reduce(function(e,a){return e+=a.numFailing()},0)}),e.forEach(function(e,t){a.projects.push(new TeamProject(e)),a.projects(a.projects().sort(function(e,a){return e.name.toLowerCase()>a.name.toLowerCase()?1:-1}))}),a.setDetailBuild=function(e){a.detailBuild(e)}}function TeamProject(e){var a=this;a.name=e.name,a.builds=ko.observableArray([]),e.builds.forEach(function(e,t){a.builds.push(new Build(a.name,e))}),a.sortedBuilds=ko.computed(function(){return a.builds().sort(function(e,a){var t,s;switch(e.status()){case"failed":t=0;break;case"succeeded":case"partiallySucceeded":t=1;break;case"canceled":t=2;break;default:t=3}switch(a.status()){case"failed":s=0;break;case"succeeded":case"partiallySucceeded":s=1;break;case"canceled":s=2;break;default:s=3}return s>t?-1:t>s?1:e.name.toLowerCase()<a.name.toLowerCase()?-1:e.name.toLowerCase()>a.name.toLowerCase()?1:0})}),a.numBuilds=ko.computed(function(){return a.builds().length}),a.numFailing=ko.computed(function(){return a.builds().reduce(function(e,a){return"failed"===a.status()&&e++,e},0)}),a.isLoading=ko.observable(!1)}function Build(e,a){var t=this;t.teamProject=e,t.definitionId=a.id,t.name=a.name,t.errors=ko.observableArray([]),t.isLoading=ko.observable(!1),t.definitionLink=ko.observable("#"),t.latestBuildLink=ko.observable("#"),t.latestBuildId=ko.observable(a.latest.id),t.latestBuildNumber=ko.observable(a.latest.buildNumber),t.latestBuildDate=ko.observable(moment(a.latest.finishTime).format("MMMM D YYYY, hh:mm:ss a")),t.status=ko.observable(a.latest.result),"failed"===t.status()?(t.errors(a.errors),t.badgeSrc=ko.observable("/assets/images/vNextBuilds/Badges/failed.png"),t.brokenSince=ko.observable(a.latest.brokenSince?"Broken since "+moment(a.BrokenSince).format("MMM D YYYY, hh:mm a"):"Never Successful")):t.badgeSrc=ko.observable("/assets/images/vNextBuilds/Badges/succeeded.png"),t.changeSet=ko.observable(a.latest.changeset)}
